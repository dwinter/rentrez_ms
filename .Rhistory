)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
png(width=1200, height = 1200, filename = "trees.png")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="papers", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("papers (n = ", commafy(sum(animal_orders$papers)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 2)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
)
png(width=800, height = 800, filename = "trees.png")
library(treemap)
library(grid)
library(gridExtra)
#Create a common colour palette for both plots.
spp_by_phyl <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla <- spp_by_phyl$phylum[ order(spp_by_phyl$spp, decreasing=TRUE)]
pal <- structure( rep(RColorBrewer::brewer.pal(name="Set1", n=8),3), .Names=phyla)
animal_orders$fill <- pal[ animal_orders$phylum ]
commafy <- function(n)  formatC(n, format = "d", big.mark = ",")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="papers", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("papers (n = ", commafy(sum(animal_orders$papers)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 2)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
png(width=800, height = 800, filename = "trees.png")
#Create a common colour palette for both plots.
spp_by_phyl <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla <- spp_by_phyl$phylum[ order(spp_by_phyl$spp, decreasing=TRUE)]
pal <- structure( rep(RColorBrewer::brewer.pal(name="Accent", n=8),3), .Names=phyla)
animal_orders$fill <- pal[ animal_orders$phylum ]
commafy <- function(n)  formatC(n, format = "d", big.mark = ",")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="papers", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("papers (n = ", commafy(sum(animal_orders$papers)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 2)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
spp_by_phyl <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla <- spp_by_phyl$phylum[ order(spp_by_phyl$spp, decreasing=TRUE)]
pal <- structure( rep(RColorBrewer::brewer.pal(name="Ac
library(treemap)
library(grid)
library(gridExtra)
#Create a common colour palette for both plots.
spp_by_phyl <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla <- spp_by_phyl$phylum[ order(spp_by_phyl$spp, decreasing=TRUE)]
pal <- structure( rep(RColorBrewer::brewer.pal(name="Accent", n=9),3), .Names=phyla)
spp_by_phyl <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla <- spp_by_phyl$phylum[ order(spp_by_phyl$spp, decreasing=TRUE)]
pal <- structure( rep(RColorBrewer::brewer.pal(name="Accent", n=9),3), .Names=phyla)
animal_orders$fill <- pal[ animal_orders$phylum ]
spp_by_phyl <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla <- spp_by_phyl$phylum[ order(spp_by_phyl$spp, decreasing=TRUE)]
pal <- structure( rep(RColorBrewer::brewer.pal(name="Accent", n=6),4), .Names=phyla)
animal_orders$fill <- pal[ animal_orders$phylum ]
commafy <- function(n)  formatC(n, format = "d", big.mark = ",")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="papers", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("papers (n = ", commafy(sum(animal_orders$papers)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 2)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
tm <- treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black")
#vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
phyla
animal_oders$phylum
head(animal_oders$phylum)
pal
pal <- structure( rep(RColorBrewer::brewer.pal(name="Accent", n=6),4), .Names=phyla)
RColorBrewer::brewer.pal("Accent", 8)
RColorBrewer::brewer.pal(8, "Accent")
animal_oders$phylum
RColorBrewer::brewer.pal(8, "Accent")
phyla
animal_oders$phylum
factor(animal_oders$phylum, levels = phyla)
animal_oders$phylum <- factor(animal_oders$phylum, levels = phyla)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
png(width=800, height = 800, filename = "trees.png")
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
pal
pal <- rep(RColorBrewer::brewer.pal(8, "Accent"))
pal
pal <- rep(RColorBrewer::brewer.pal(8, "Accent"))
png(width=800, height = 800, filename = "trees.png")
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
png(width=800, height = 800, filename = "trees.png")
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=rev(pal), type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
png(width=800, height = 800, filename = "trees.png")
pal <- rep(RColorBrewer::brewer.pal(8, "Dark2"))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=rev(pal), type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
png(width=800, height = 800, filename = "trees.png")
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
library(treemap)
library(grid)
library(gridExtra)
#Create a common colour palette for both plots.
spp_per_phylum <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla_ordered <- spp_by_phyuml$phylum[ order(spp_by_phyuml$spp, decreasing=TRUE)]
library(treemap)
library(grid)
library(gridExtra)
#Create a common colour palette for both plots.
spp_per_phylum <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla_ordered <- spp_by_phylum$phylum[ order(spp_by_phyuml$spp, decreasing=TRUE)]
library(treemap)
library(grid)
library(gridExtra)
#Create a common colour palette for both plots.
spp_per_phylum <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla_ordered <- spp_per_phylum$phylum[ order(spp_per_phyuml$spp, decreasing=TRUE)]
library(treemap)
library(grid)
library(gridExtra)
#Create a common colour palette for both plots.
spp_per_phylum <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla_ordered <- spp_per_phylum$phylum[ order(spp_per_phylum$spp, decreasing=TRUE)]
animal_orders$phylum<- factor(animal_orders$phylum, levels=phyla_ordered)
pal <-  rep(RColorBrewer::brewer.pal(8, name="Set1"), 3)
commafy <- function(n)  formatC(n, format = "d", big.mark = ",")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="papers", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("papers (n = ", commafy(sum(animal_orders$papers)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 2)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="fill",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
library(treemap)
library(grid)
library(gridExtra)
# 24 phyla means some fill-colours will be re-used, ordering phylum factor by spp
# will prevent any "major" phyla from getting the same colour.
spp_per_phylum <- aggregate(spp ~ phylum, FUN=sum, data=animal_orders)
phyla_ordered <- spp_per_phylum$phylum[ order(spp_per_phylum$spp, decreasing=TRUE)]
animal_orders$phylum<- factor(animal_orders$phylum, levels=phyla_ordered)
pal <-  rep(RColorBrewer::brewer.pal(8, name="Set1"), 3)
commafy <- function(n)  formatC(n, format = "d", big.mark = ",")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="spp", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("species (n = ", commafy(sum(animal_orders$spp)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="papers", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("papers (n = ", commafy(sum(animal_orders$papers)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 1, layout.pos.col = 2)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="sequences", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("sequences (n = ", commafy(sum(animal_orders$sequences)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 1)
)
treemap(animal_orders,
index=c("phylum", "class", "order"), vSize="genomes", vColor="phylum",
palette=pal, type='categorical', position.legend="none",
title=paste0("genomes (n = ", commafy(sum(animal_orders$genomes)), ")"),
border.col=c("white","white","black"),
vp = viewport(layout.pos.row = 2, layout.pos.col = 2)
)
devtools::use_build_ignore(".Rproj.user/*")
devtools::use_build_ignore("")
devtools::use_build_ignore()
getwd()
devtools::use_build_ignore(pkg='.')
library(devtools)
load_all()
library(rentrez)
count_recs <- function(db, denom,round_to=1) {
nrecs <-  rentrez::entrez_db_summary(db)["Count"]
round(as.integer(nrecs)/denom, round_to)
}
pubmed_search <- entrez_search(db="pubmed",
term="(R package[TITL]) AND 2017[PDAT]",
use_history=TRUE)
pubmed_search
pkg_paper_summs <- entrez_summary(db="pubmed", web_history=pubmed_search$web_history)
pkg_paper_summs
journals <- extract_from_esummary(pkg_paper_summs, "fulljournalname")
head(journals,3)
table(journals)
sort(table(journals))
sort(table(journals), decreasing = TRUE)
journals_by_hits <- sort(table(journals), decreasing = TRUE)
head(journals_by_hits,4)
head(journals_by_hits,3)
journals_by_R_pkgs <- sort(table(journals), decreasing = TRUE)
head(journals_by_R_pkgs,3)
journals <- extract_from_esummary(pkg_paper_summs, "fulljournalname")
journals_by_R_pkgs <- sort(table(journals), decreasing = TRUE)
head(journals_by_R_pkgs,3)
library(rentrez)
count_recs <- function(db, denom,round_to=1) {
nrecs <-  rentrez::entrez_db_summary(db)["Count"]
round(as.integer(nrecs)/denom, round_to)
}
pubmed_search <- entrez_search(db="pubmed",
term="(R package[TITL]) AND 2017[PDAT]",
use_history=TRUE)
pubmed_search
pkg_paper_summs <- entrez_summary(db="pubmed", web_history=pubmed_search$web_history)
pkg_paper_summs
journals <- extract_from_esummary(pkg_paper_summs, "fulljournalname")
journals_by_R_pkgs <- sort(table(journals), decreasing = TRUE)
head(journals_by_R_pkgs,4)
head(journals_by_R_pkgs,8)
library(rentrez)
entrez_search(db="pubmed", term="Cancer", retmax=20)
entrez_link
?entrez_link
entrez_link(dbfrom = "pubmed", cmd="prlinks", id = )
s <- entrez_search(db="pubmed", term="pigs", retmax=20)
entrez_link(dbfrom = "pubmed", cmd="prlinks", id =s$ids )
lo <- entrez_link(dbfrom = "pubmed", cmd="prlinks", id =s$ids )
sapply()
lo$linkouts
rentrez::linkout_urls(elink = )
rentrez::linkout_urls(elink = lo)
s <- entrez_search(db="pubmed", term="Ascomycetes[ORGN]", retmax=20)
lo <- entrez_link(dbfrom = "pubmed", cmd="prlinks", id =s$ids )
linkout_urls(elink = lo)
s <- entrez_search(db="pubmed", term="Ascomycetes[ORGN]", retmax=20)
lo <- entrez_link(dbfrom = "pubmed", cmd="llinks", id =s$ids )
linkout_urls(elink = lo)
s <- entrez_search(db="pubmed", term="Ascomycetes[ORGN]", retmax=20)
lo <- entrez_link(dbfrom = "pubmed", cmd="llinks", id =s$ids )
linkout_urls(elink = lo)
shots <- seq(1,10,length.out = 1000)
shoting <- seq(.01,1,length.out = 1000)
combn(shots, shoting)
expand.grid(shots, shoting)
M <- matrix(0, 1000, 1000)
for( i in 1:1000){}
for( i in 1:1000){
for( j in 1:1000) {
}
}
i
j
?for
help(for)
help('for')
shotp
i <- 10
j <- 11
shoting[i]
400 / shoting[i]
(400 / shoting[i]  * i)
(400 / shoting[i]  * j)
(400 / shoting[i]  * shots[j])
j
i
j
shos
shots
for(i in 1:1000){
for( j in 1:1000){}
for(i in 1:1000){
for( j in 1:1000){
M[i,j] <- (400 / shoting[i]  * shots[j])
}}
{}
}
?mapply
outer
mapply(function(x, y) seq_len(x) + y,
c(a =  1, b = 2, c = 3),  # names from first
c(A = 10, B = 0, C = -10))
mapply(function(x,y) (400/x) * y, shoting, shots)
hrs <- mapply(function(x,y) (400/x) * y, shoting, shots)
dim(hrs)
length(hrs)
?outer
outer(shoting, shots, function(x,y) (400/x) * y)
M <- outer(shoting, shots, function(x,y) (400/x) * y)
dim(M)
library(rehsape)
melt(M)
library(rehsape2)
install.packages(("rehsape"))
install.packages(("rehsape2"))
install.packages("reshape")
library(rehsape)
library(rehsape2)
library(reshape)
melt(M)
MM <- meltt(M)
MM <- melt(M)
head(MM)
head(MM)
ggplot2::li
library(ggplot2)
ggplot(MM, aes(X1, X2, fill=value)) + geom_tile()
shots <- seq(1,10,length.out = 1000)
shoting <- seq(.01,1,length.out = 1000)
head(shpts)
head(shots)
head(shoting)
400/shoting
(400/shoting) * shots
(400/shoting)
(400/shoting)/1
(400/shoting)/10
shots <- seq(1,10,length.out = 1000)
M <- outer(shoting, shots, function(x,y) (400/x)/ y)
MM <- meltt(M)
MM <- melt(M)
ggplot(MM, aes(X1, X2, fill=value)) + geom_tile()
head(MM)
tail(MM)
M <- outer(shoting, shots, function(x,y) (400/x)/ y)
?outer
outer(MM)
rownames(MM) <- shots
rownames(MM)
rownames(M)
rownames(M)  <- shots
colnames(M)  <- shoting
MM <- melt(M)
ggplot(MM, aes(X1, X2, fill=value)) + geom_tile()
ggplot(MM, aes(X1, X2, fill=log(value)) + geom_tile()
ggplot(MM, aes(X1, X2, fill=log(value)) + geom_tile()
ggplot(MM, aes(X1, X2, fill=log(value))) + geom_tile()
